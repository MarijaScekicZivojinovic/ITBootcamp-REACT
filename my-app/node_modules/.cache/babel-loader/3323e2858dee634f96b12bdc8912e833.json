{"ast":null,"code":"var _jsxFileName = \"D:\\\\--- IT Bootcamp\\\\- React predavanja\\\\my-app\\\\src\\\\components\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      counter: 0,\n      imageURL: 'https://picsum.photos/200',\n      tags: [\"tag1\", \"tag2\", \"tag3\"] // classes je povezano sa Change classes\n      // classes: warning\n\n    };\n\n    this.handleIncrement = () => {\n      console.log('handleIncrement');\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.handleDecrement = () => {\n      console.log('handleDecrement');\n      this.setState({\n        counter: this.state.counter - 1\n      });\n    };\n\n    this.styles = {\n      fontSize: \"10px\",\n      fontWeight: 'bold',\n      color: 'green'\n    };\n\n    this.formatCount = () => {\n      //destructuring\n      const {\n        counter\n      } = this.state; // console.log(this.state.counter)\n      // console.log(counter);\n\n      return counter === 0 ? \"Zero\" : counter;\n    };\n\n    this.getClass = () => {\n      return this.state.counter <= 0 ? 'warning' : 'success';\n    };\n  }\n\n  // changeClass = () => {\n  //     const { classes } = this.state\n  //     const { counter } = this.state\n  //     counter <= 0 ? this.setState({ classes: 'warning' }) : this.setState({ classes: 'success' })\n  // }\n  // checkSuccess = () => {\n  //     return this.state.counter === 0 ? \n  //     <p className=\"warning\">{this.state.counter}</p> : \n  //     <p className=\"success\">{this.state.counter}</p>\n  // }\n  render() {\n    // za inline css, trebaju nam dve {{}} pa unutra zapisujemo, ali umesto font-size pisacemo fontSize, ili samo jednu {} a unutra this.nekistilkojijedefinisaniznad\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: this.styles,\n        children: \"Pozdrav iz Child komponente!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 30,\n          color: 'blue'\n        },\n        children: \"Ja sam paragraf!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleDecrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: this.getClass(),\n        children: [\"Nas counter je: \", this.formatCount(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tagovi: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), this.state.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"# \", tag]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:/--- IT Bootcamp/- React predavanja/my-app/src/components/Counter.js"],"names":["React","Component","Counter","state","counter","imageURL","tags","handleIncrement","console","log","setState","handleDecrement","styles","fontSize","fontWeight","color","formatCount","getClass","render","map","tag","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,QAAQ,EAAE,2BAFN;AAGJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAHF,CAIJ;AACA;;AALI,KADoB;;AAAA,SAe5BC,eAf4B,GAeV,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,OAAd;AACH,KAnB2B;;AAAA,SAqB5BO,eArB4B,GAqBV,MAAM;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,OAAd;AACH,KAzB2B;;AAAA,SA4B5BQ,MA5B4B,GA4BnB;AACLC,MAAAA,QAAQ,EAAE,MADL;AAELC,MAAAA,UAAU,EAAE,MAFP;AAGLC,MAAAA,KAAK,EAAE;AAHF,KA5BmB;;AAAA,SAwC5BC,WAxC4B,GAwCd,MAAM;AAChB;AACA,YAAM;AAAEZ,QAAAA;AAAF,UAAc,KAAKD,KAAzB,CAFgB,CAGhB;AACA;;AACA,aAAOC,OAAO,KAAK,CAAZ,GAAgB,MAAhB,GAAyBA,OAAhC;AACH,KA9C2B;;AAAA,SAgD5Ba,QAhD4B,GAgDjB,MAAM;AACb,aAAO,KAAKd,KAAL,CAAWC,OAAX,IAAsB,CAAtB,GAA0B,SAA1B,GAAsC,SAA7C;AACH,KAlD2B;AAAA;;AAoD5B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAc,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE,KAAKN,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBE,UAAAA,KAAK,EAAE;AAAvB,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWE;AAArB;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAQ,QAAA,OAAO,EAAE,KAAKM,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAWI;AAAG,QAAA,SAAS,EAAE,KAAKM,QAAL,EAAd;AAAA,uCAAgD,KAAKD,WAAL,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAQ,QAAA,OAAO,EAAE,KAAKT,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,EAmBQ,KAAKJ,KAAL,CAAWG,IAAX,CAAgBa,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,kBAChB;AAAA,yBAAkBD,GAAlB;AAAA,SAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,cADJ,CAnBR;AAAA,oBADJ;AA8BH;;AAhG2B;;AAmGhC,eAAenB,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        counter: 0,\r\n        imageURL: 'https://picsum.photos/200',\r\n        tags: [\"tag1\", \"tag2\", \"tag3\"],\r\n        // classes je povezano sa Change classes\r\n        // classes: warning\r\n    }\r\n\r\n    // constructor() {\r\n    //     super();\r\n    //     console.log('Constructor', this)\r\n    //     this.formatCount = this.formatCount.bind(this)\r\n    // }\r\n\r\n    handleIncrement = () => {\r\n        console.log('handleIncrement')\r\n\r\n        this.setState({ counter: this.state.counter + 1 })\r\n    }\r\n\r\n    handleDecrement = () => {\r\n        console.log('handleDecrement')\r\n\r\n        this.setState({ counter: this.state.counter - 1 })\r\n    }\r\n\r\n    // stil mozemo da dodamo i ovde, a posle ga pozivamo samo u jednoj {}\r\n    styles = {\r\n        fontSize: \"10px\",\r\n        fontWeight: 'bold',\r\n        color: 'green'\r\n    }\r\n\r\n    // formatCount() {\r\n    //     //destructuring\r\n    //     const { counter } = this.state\r\n    //     console.log(counter)\r\n    // }\r\n\r\n    formatCount = () => {\r\n        //destructuring\r\n        const { counter } = this.state\r\n        // console.log(this.state.counter)\r\n        // console.log(counter);\r\n        return counter === 0 ? \"Zero\" : counter\r\n    }\r\n\r\n    getClass = () => {\r\n        return this.state.counter <= 0 ? 'warning' : 'success'\r\n    }\r\n\r\n    // changeClass = () => {\r\n    //     const { classes } = this.state\r\n    //     const { counter } = this.state\r\n    //     counter <= 0 ? this.setState({ classes: 'warning' }) : this.setState({ classes: 'success' })\r\n    // }\r\n\r\n    // checkSuccess = () => {\r\n    //     return this.state.counter === 0 ? \r\n    //     <p className=\"warning\">{this.state.counter}</p> : \r\n    //     <p className=\"success\">{this.state.counter}</p>\r\n    // }\r\n\r\n    render() {\r\n        // za inline css, trebaju nam dve {{}} pa unutra zapisujemo, ali umesto font-size pisacemo fontSize, ili samo jednu {} a unutra this.nekistilkojijedefinisaniznad\r\n        return (\r\n            <>\r\n                <h2 style={this.styles}>Pozdrav iz Child komponente!</h2>\r\n                <p style={{ fontSize: 30, color: 'blue' }}>Ja sam paragraf!</p>\r\n\r\n                {/* ovo je komentar */}\r\n\r\n                <img src={this.state.imageURL} />\r\n\r\n                {/* <button onClick={this.formatCount}>-</button> */}\r\n                <button onClick={this.handleDecrement}>-</button>\r\n                {/* <p>Count: {this.state.counter} </p> */}\r\n                <p className={this.getClass()}>Nas counter je: {this.formatCount()} </p>\r\n                <button onClick={this.handleIncrement}>+</button>\r\n                {/* drugi nacin: */}\r\n                {/* <p className={this.state.counter <= 0 ? 'warning' : 'success'}>Nas counter je: {this.formatCount()}</p> */}\r\n\r\n                <h1>Tagovi: </h1>\r\n                {/* umesto array.forEach mozemo ovako: */}\r\n                {\r\n                    this.state.tags.map((tag, index) => (\r\n                        <p key={index}># {tag}</p>\r\n                    ))\r\n                }\r\n                {/* <p>{this.state.tags[0]}</p>\r\n                <p>{this.state.tags[1]}</p>\r\n                <p>{this.state.tags[2]}</p> */}\r\n                {/* {this.checkSuccess} */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}