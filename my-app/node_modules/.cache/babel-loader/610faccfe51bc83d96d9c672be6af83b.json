{"ast":null,"code":"var _jsxFileName = \"D:\\\\--- IT Bootcamp\\\\- React predavanja\\\\my-app\\\\src\\\\components\\\\Counters.js\";\nimport React, { Component } from 'react';\nimport ChildCounter from './ChildCounter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      counters: [{\n        id: 0,\n        value: 0\n      }, {\n        id: 1,\n        value: 1\n      }, {\n        id: 2,\n        value: 2\n      }, {\n        id: 3,\n        value: 3\n      }]\n    };\n\n    this.handleIncrement = id => {\n      console.log(id, \"u Counters, handleIncrement se nalazi\"); // ovaj ID prosledjujemo Child komponenti\n      // Spread operator\n      // const counters = [...this.state.counters]\n      // pravimo kopiju objekta iznad\n      // const counter = {...this.state.counters[0], name: \"Child\"}\n\n      this.setState({\n        counters: this.state.counters.map(counter => {\n          return counter.id === id ? { ...counter,\n            value: counter.value + 1\n          } : counter;\n        })\n      });\n    };\n\n    this.handleDelete = id => {\n      this.setState(previousState => ({\n        counters: previousState.counters.filter(item => item.id === id)\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(ChildCounter, {\n        // id={counter.id}\n        // value={counter.value}\n        counter: counter,\n        onIncrement: this.handleIncrement,\n        onDelete: this.handleDelete\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["D:/--- IT Bootcamp/- React predavanja/my-app/src/components/Counters.js"],"names":["React","Component","ChildCounter","Counters","state","counters","id","value","handleIncrement","console","log","setState","map","counter","handleDelete","previousState","filter","item","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHM,EAIN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJM;AADN,KADqB;;AAAA,SAU7BC,eAV6B,GAUVF,EAAD,IAAQ;AACtBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ,EAAgB,uCAAhB,EADsB,CAEtB;AAEA;AACA;AACA;AACA;;AACA,WAAKK,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBO,GAApB,CAAyBC,OAAD,IAAa;AAC3C,iBAAOA,OAAO,CAACP,EAAR,KAAeA,EAAf,GAAoB,EAAE,GAAGO,OAAL;AAAcN,YAAAA,KAAK,EAAEM,OAAO,CAACN,KAAR,GAAgB;AAArC,WAApB,GAA+DM,OAAtE;AACH,SAFS;AADA,OAAd;AAMH,KAxB4B;;AAAA,SA0B7BC,YA1B6B,GA0BdR,EAAE,IAAI;AACjB,WAAKK,QAAL,CAAeI,aAAD,KAAoB;AAC9BV,QAAAA,QAAQ,EAAEU,aAAa,CAACV,QAAd,CAAuBW,MAAvB,CAA+BC,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYA,EAApD;AADoB,OAApB,CAAd;AAGH,KA9B4B;AAAA;;AAgC7BY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKd,KAAL,CAAWC,QAAX,CAAoBO,GAApB,CAAyBC,OAAD,iBACrB,QAAC,YAAD;AAEI;AACA;AACA,QAAA,OAAO,EAAEA,OAJb;AAKI,QAAA,WAAW,EAAE,KAAKL,eALtB;AAMI,QAAA,QAAQ,EAAE,KAAKM;AANnB,SACSD,OAAO,CAACP,EADjB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAhD4B;;AAmDjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ChildCounter from './ChildCounter';\r\n\r\nclass Counters extends Component {\r\n    state = {\r\n        counters: [\r\n            { id: 0, value: 0 },\r\n            { id: 1, value: 1 },\r\n            { id: 2, value: 2 },\r\n            { id: 3, value: 3 },\r\n        ]\r\n    }\r\n\r\n    handleIncrement = (id) => {\r\n        console.log(id, \"u Counters, handleIncrement se nalazi\")\r\n        // ovaj ID prosledjujemo Child komponenti\r\n\r\n        // Spread operator\r\n        // const counters = [...this.state.counters]\r\n        // pravimo kopiju objekta iznad\r\n        // const counter = {...this.state.counters[0], name: \"Child\"}\r\n        this.setState({\r\n            counters: this.state.counters.map((counter) => {\r\n                return counter.id === id ? { ...counter, value: counter.value + 1 } : counter;\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n    handleDelete = id => {\r\n        this.setState((previousState) => ({\r\n            counters: previousState.counters.filter((item) => item.id === id)\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.counters.map((counter) => (\r\n                    <ChildCounter\r\n                        key={counter.id}\r\n                        // id={counter.id}\r\n                        // value={counter.value}\r\n                        counter={counter}\r\n                        onIncrement={this.handleIncrement}\r\n                        onDelete={this.handleDelete} />\r\n                ))}\r\n                {/* <ChildCounter /> */}\r\n                {/* odmah zatvaramo sa /> jer samo hocemo da renderujemo */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counters;"]},"metadata":{},"sourceType":"module"}